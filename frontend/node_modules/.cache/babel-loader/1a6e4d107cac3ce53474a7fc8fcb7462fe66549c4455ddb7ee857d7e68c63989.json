{"ast":null,"code":"var _jsxFileName = \"/Users/eliotmalsert/Code/SR03/sr03devoir2/frontend/src/contexts/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { getCurrentUser, isAuthenticated } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const isAuth = await isAuthenticated();\n        if (isAuth) {\n          const userData = await getCurrentUser();\n          setUser(userData);\n        } else {\n          setUser(null);\n        }\n      } catch (err) {\n        setError(err);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const value = {\n    user,\n    setUser,\n    loading,\n    error,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","getCurrentUser","isAuthenticated","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","checkAuth","isAuth","userData","err","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/eliotmalsert/Code/SR03/sr03devoir2/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { getCurrentUser, isAuthenticated } from '../services/api';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const checkAuth = async () => {\n            try {\n                const isAuth = await isAuthenticated();\n                if (isAuth) {\n                    const userData = await getCurrentUser();\n                    setUser(userData);\n                } else {\n                    setUser(null);\n                }\n            } catch (err) {\n                setError(err);\n                setUser(null);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        checkAuth();\n    }, []);\n\n    const value = {\n        user,\n        setUser,\n        loading,\n        error,\n        isAuthenticated: !!user\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,cAAc,EAAEC,eAAe,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGR,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMd,eAAe,CAAC,CAAC;QACtC,IAAIc,MAAM,EAAE;UACR,MAAMC,QAAQ,GAAG,MAAMhB,cAAc,CAAC,CAAC;UACvCS,OAAO,CAACO,QAAQ,CAAC;QACrB,CAAC,MAAM;UACHP,OAAO,CAAC,IAAI,CAAC;QACjB;MACJ,CAAC,CAAC,OAAOQ,GAAG,EAAE;QACVJ,QAAQ,CAACI,GAAG,CAAC;QACbR,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,SAAS;QACNE,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,KAAK,GAAG;IACVV,IAAI;IACJC,OAAO;IACPC,OAAO;IACPE,KAAK;IACLX,eAAe,EAAE,CAAC,CAACO;EACvB,CAAC;EAED,oBACIL,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAZ,QAAA,EAC9BA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAChB,EAAA,CAvCWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAyCzB,OAAO,MAAMoB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAG9B,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACuB,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}