{"ast":null,"code":"var _jsxFileName = \"/Users/eliotmalsert/Code/SR03/sr03devoir2/frontend/src/pages/ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { messageService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const {\n    channelId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadMessages = async () => {\n      try {\n        setLoading(true);\n        const response = await messageService.getMessages(channelId);\n        setMessages(response.data);\n        setError(null);\n      } catch (err) {\n        setError('Erreur lors du chargement des messages');\n        console.error('Error loading messages:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadMessages();\n  }, [channelId]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      await messageService.sendMessage(channelId, {\n        content: newMessage\n      });\n      setNewMessage('');\n      // Recharger les messages après l'envoi\n      const response = await messageService.getMessages(channelId);\n      setMessages(response.data);\n    } catch (err) {\n      setError('Erreur lors de l\\'envoi du message');\n      console.error('Error sending message:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement des messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), \" \", message.content]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"\\xC9crivez votre message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"9Abrie8nDMrPPr752u2mXfDdLQo=\", false, function () {\n  return [useParams];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useParams","messageService","jsxDEV","_jsxDEV","ChatRoom","_s","channelId","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","loadMessages","response","getMessages","data","err","console","handleSendMessage","e","preventDefault","trim","sendMessage","content","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","message","sender","id","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/eliotmalsert/Code/SR03/sr03devoir2/frontend/src/pages/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { messageService } from '../services/api';\n\nconst ChatRoom = () => {\n  const { channelId } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadMessages = async () => {\n      try {\n        setLoading(true);\n        const response = await messageService.getMessages(channelId);\n        setMessages(response.data);\n        setError(null);\n      } catch (err) {\n        setError('Erreur lors du chargement des messages');\n        console.error('Error loading messages:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadMessages();\n  }, [channelId]);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    try {\n      await messageService.sendMessage(channelId, { content: newMessage });\n      setNewMessage('');\n      // Recharger les messages après l'envoi\n      const response = await messageService.getMessages(channelId);\n      setMessages(response.data);\n    } catch (err) {\n      setError('Erreur lors de l\\'envoi du message');\n      console.error('Error sending message:', err);\n    }\n  };\n\n  if (loading) {\n    return <div>Chargement des messages...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"chat-room\">\n      <h2>Chat Room</h2>\n      <div className=\"messages\">\n        {messages.map((message) => (\n          <div key={message.id} className=\"message\">\n            <strong>{message.sender}:</strong> {message.content}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSendMessage} className=\"message-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Écrivez votre message...\"\n        />\n        <button type=\"submit\">Envoyer</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}