{"ast":null,"code":"var _jsxFileName = \"/Users/eliotmalsert/Code/SR03/sr03devoir2/frontend/src/pages/UserChannels.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Spinner, Alert } from 'react-bootstrap';\nimport { userService } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserChannels = () => {\n  _s();\n  const [channels, setChannels] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const loadUserChannels = async () => {\n      try {\n        setLoading(true);\n        const channelsData = await userService.getCurrentUserChannels();\n        setChannels(channelsData);\n        setError(null);\n      } catch (err) {\n        if (err.message === 'User not authenticated') {\n          navigate('/login', {\n            replace: true\n          });\n        } else {\n          setError('Erreur lors du chargement des canaux');\n          console.error('Error loading user channels:', err);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUserChannels();\n  }, [navigate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        height: '50vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Chargement...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Mes Canaux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), channels.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      children: \"Aucun canal trouv\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: channels.map(channel => /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        lg: 4,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: channel.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: channel.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between text-muted\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Date: \", new Date(channel.date).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Dur\\xE9e: \", channel.duration, \" minutes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, channel.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(UserChannels, \"0vAN+c0SAD+JTQR/xMQi4Ws3Vjo=\", false, function () {\n  return [useNavigate];\n});\n_c = UserChannels;\nexport default UserChannels;\nvar _c;\n$RefreshReg$(_c, \"UserChannels\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Spinner","Alert","userService","useNavigate","jsxDEV","_jsxDEV","UserChannels","_s","channels","setChannels","loading","setLoading","error","setError","navigate","loadUserChannels","channelsData","getCurrentUserChannels","err","message","replace","console","className","style","height","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","variant","length","map","channel","md","lg","Body","Title","title","Text","description","Date","date","toLocaleDateString","duration","id","_c","$RefreshReg$"],"sources":["/Users/eliotmalsert/Code/SR03/sr03devoir2/frontend/src/pages/UserChannels.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Spinner, Alert } from 'react-bootstrap';\nimport { userService } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\n\nconst UserChannels = () => {\n  const [channels, setChannels] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const loadUserChannels = async () => {\n      try {\n        setLoading(true);\n        const channelsData = await userService.getCurrentUserChannels();\n        setChannels(channelsData);\n        setError(null);\n      } catch (err) {\n        if (err.message === 'User not authenticated') {\n          navigate('/login', { replace: true });\n        } else {\n          setError('Erreur lors du chargement des canaux');\n          console.error('Error loading user channels:', err);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadUserChannels();\n  }, [navigate]);\n\n  if (loading) {\n    return (\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '50vh' }}>\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Chargement...</span>\n        </Spinner>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container>\n        <Alert variant=\"danger\">{error}</Alert>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <h2 className=\"mb-4\">Mes Canaux</h2>\n      {channels.length === 0 ? (\n        <Alert variant=\"info\">Aucun canal trouvé</Alert>\n      ) : (\n        <Row>\n          {channels.map((channel) => (\n            <Col key={channel.id} md={6} lg={4} className=\"mb-4\">\n              <Card>\n                <Card.Body>\n                  <Card.Title>{channel.title}</Card.Title>\n                  <Card.Text>{channel.description}</Card.Text>\n                  <div className=\"d-flex justify-content-between text-muted\">\n                    <small>Date: {new Date(channel.date).toLocaleDateString()}</small>\n                    <small>Durée: {channel.duration} minutes</small>\n                  </div>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nexport default UserChannels; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}